'''
                    CYBERNETIQUE APPLIQUEE
                PROJET DE SEMESTRE PRINTEMPS 2011
                    PARCOURS VITA POUR NAO

@author      : Arnaud BEGUIN
@description : Definition du troisieme exercice du parcours
               Vita, consiste a etirer les cuisses en 
               se tenant en equilibre sur une jambe
'''


from tools import Init_Pose

class Ex3(object):
    '''
    classdocs
    '''
    
    def __init__(self, p):
        '''
        Constructor
        '''
        self.__proxy = p
        
    # ordonne au nao de faire l'exercice nbFois fois
    def do(self, nbFois):
        
        if nbFois > 0:
            # initialisation
            self.initialisation()
            
            # exercice
            self.repeatExercice(nbFois)
            
            self.finalise()
            print "fin exercice !"
        
    '''
    Repete l'exercice nbFois fois
    '''
    def repeatExercice(self, nbFois):
        if nbFois > 1:
            for i in range(nbFois):
                print "fais exercice gauche"
                self.doExerciceGauche()
            print "finalisation exercice gauche"
            self.finalise()
            for i in range(nbFois):
                print "fais exercice droite"
                self.doExerciceDroite()
        else:
            print "fais exercice gauche"
            self.doExerciceGauche()
            print "finalisation exercice gauche"
            self.finalise()
            print "fais exercice droite"
            self.doExerciceDroite()
        
    
    '''
    Initialisation de la position du robot
    '''
    def initialisation(self):
        # mets le robot en position Init_Pose
        initPose = Init_Pose.Init_Pose(self.__proxy)
        initPose.do()
        
    '''
    Termine l'exercice en revenant en position initiale
    '''
    def finalise(self):
        # mets le robot en position Init_Pose
        initPose = Init_Pose.Init_Pose(self.__proxy)
        initPose.do()
        
    '''
    Decrit les mouvements de l'exercice pour le cote gauche
    '''
    def doExerciceGauche(self):
        names = list()
        times = list()
        keys  = list()
        
        names.append("HeadYaw")
        times.append([ 0.10000, 4.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("HeadPitch")
        times.append([ 0.10000, 4.50000, 13.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 3.00000, 0.00000]], [ 0.00000, [ 2, -3.00000, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LShoulderPitch")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000])
        keys.append([ [ 1.39626, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 1.39626, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.85005, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 1.85005, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LShoulderRoll")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000])
        keys.append([ [ 0.34907, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.34907, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.27925, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 0.27925, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LElbowYaw")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000])
        keys.append([ [ -1.39626, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ -1.39626, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ -2.07694, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ -2.07694, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LElbowRoll")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000])
        keys.append([ [ -1.04720, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ -1.04720, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.00873, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ -0.00873, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -1.04720, [ 2, -0.66667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LWristYaw")
        times.append([ 0.10000, 4.50000, 13.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 3.00000, 0.00000]], [ 0.00000, [ 2, -3.00000, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LHand")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.00000, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 1.00000, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RShoulderPitch")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 1.39626, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 1.39626, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.08727, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ -0.08727, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 1.39626, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RShoulderRoll")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ -0.34907, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ -0.34907, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.43633, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ -0.43633, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ -0.34907, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RElbowYaw")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 1.39626, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 1.39626, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.04720, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 1.04720, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 1.39626, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RElbowRoll")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 1.04720, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 1.04720, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.04720, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00873, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 0.00873, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.04720, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.04720, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 1.04720, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RWristYaw")
        times.append([ 0.10000, 4.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RHand")
        times.append([ 0.10000, 4.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LHipYawPitch")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 0.00000, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 0.00000, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.00000, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LHipRoll")
        times.append([ 0.10000, 2.50000, 4.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 0.52360, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.52360, [ 2, -0.66667, 0.00000], [ 2, 2.33333, 0.00000]], [ 0.52360, [ 2, -2.33333, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.52360, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.52360, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.00000, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LHipPitch")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ -0.43633, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ -0.34907, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.80285, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.34907, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 0.34907, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.80285, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ -0.43633, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LKneePitch")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.69813, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 0.34907, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 2.11185, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 2.00713, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 2.00713, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 2.11185, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.69813, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LAnklePitch")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ -0.34907, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ -0.34907, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.52360, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.52360, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 0.52360, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.52360, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ -0.34907, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LAnkleRoll")
        times.append([ 0.10000, 4.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 2.33333, 0.00000]], [ 0.00000, [ 2, -2.33333, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.00000, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RHipRoll")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 0.34907, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.31278, [ 2, -0.66667, 0.00013], [ 2, 1.66667, -0.00032]], [ 0.31246, [ 2, -1.66667, 0.00009], [ 2, 0.66667, -0.00003]], [ 0.31241, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.31241, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.00000, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RHipPitch")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ -0.43633, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ -0.43633, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.39097, [ 2, -0.66667, -0.00001], [ 2, 1.66667, 0.00002]], [ -0.39096, [ 2, -1.66667, -0.00000], [ 2, 0.66667, 0.00000]], [ -0.39095, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.39095, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ -0.43633, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RKneePitch")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.69813, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.69813, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.62556, [ 2, -0.66667, 0.00026], [ 2, 1.66667, -0.00064]], [ 0.62492, [ 2, -1.66667, 0.00017], [ 2, 0.66667, -0.00007]], [ 0.62483, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.62483, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.69813, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RAnklePitch")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ -0.34907, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ -0.34907, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.31278, [ 2, -0.66667, -0.00013], [ 2, 1.66667, 0.00032]], [ -0.31246, [ 2, -1.66667, -0.00009], [ 2, 0.66667, 0.00003]], [ -0.31241, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.31241, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ -0.34907, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RAnkleRoll")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ -0.38397, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.38397, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.31241, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ -0.31246, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.31241, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.38397, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.00000, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        try:
            self.__proxy.angleInterpolationBezier(names, times, keys);
        except BaseException, err:
            print str(err)

        
    '''
    Decrit les mouvements de l'exercice pour le cote droit
    '''
    def doExerciceDroite(self):
        names = list()
        times = list()
        keys  = list()
        
        names.append("HeadYaw")
        times.append([ 0.10000, 4.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("HeadPitch")
        times.append([ 0.10000, 4.50000, 13.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 3.00000, 0.00000]], [ 0.00000, [ 2, -3.00000, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LShoulderPitch")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 1.39626, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 1.39626, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.08727, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ -0.08727, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 1.39626, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LShoulderRoll")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.34907, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 0.34907, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.43633, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 0.43633, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.34907, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LElbowYaw")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ -1.39626, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ -1.39626, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ -1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -1.04720, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ -1.04720, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ -1.39626, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LElbowRoll")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ -1.04720, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ -1.04720, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ -1.04720, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.00873, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ -0.00873, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -1.04720, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -1.04720, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ -1.04720, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LWristYaw")
        times.append([ 0.10000, 4.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LHand")
        times.append([ 0.10000, 4.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RShoulderPitch")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000])
        keys.append([ [ 1.39626, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 1.39626, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.85005, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 1.85005, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RShoulderRoll")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000])
        keys.append([ [ -0.34907, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ -0.34907, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.27925, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ -0.27925, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RElbowYaw")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000])
        keys.append([ [ 1.39626, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 1.39626, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ 2.07694, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 2.07694, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.39626, [ 2, -0.66667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RElbowRoll")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000])
        keys.append([ [ 1.04720, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 1.04720, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00873, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 0.00873, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.04720, [ 2, -0.66667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RWristYaw")
        times.append([ 0.10000, 4.50000, 13.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 3.00000, 0.00000]], [ 0.00000, [ 2, -3.00000, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RHand")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ 1.00000, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 1.00000, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LHipYawPitch")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 0.00000, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 0.00000, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.00000, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LHipRoll")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ -0.34907, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.31278, [ 2, -0.66667, -0.00013], [ 2, 1.66667, 0.00032]], [ -0.31246, [ 2, -1.66667, -0.00009], [ 2, 0.66667, 0.00003]], [ -0.31241, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.31241, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.00000, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LHipPitch")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ -0.43633, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ -0.43633, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.39097, [ 2, -0.66667, -0.00001], [ 2, 1.66667, 0.00002]], [ -0.39096, [ 2, -1.66667, -0.00000], [ 2, 0.66667, 0.00000]], [ -0.39095, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.39095, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ -0.43633, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LKneePitch")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.69813, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.69813, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.62556, [ 2, -0.66667, 0.00026], [ 2, 1.66667, -0.00064]], [ 0.62492, [ 2, -1.66667, 0.00017], [ 2, 0.66667, -0.00007]], [ 0.62483, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.62483, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.69813, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LAnklePitch")
        times.append([ 0.10000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ -0.34907, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ -0.34907, [ 2, -1.46667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.31278, [ 2, -0.66667, -0.00013], [ 2, 1.66667, 0.00032]], [ -0.31246, [ 2, -1.66667, -0.00009], [ 2, 0.66667, 0.00003]], [ -0.31241, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.31241, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ -0.34907, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("LAnkleRoll")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 0.38397, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.38397, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.31241, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 0.31246, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.31241, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.38397, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.00000, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RHipRoll")
        times.append([ 0.10000, 2.50000, 4.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ -0.52360, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.52360, [ 2, -0.66667, 0.00000], [ 2, 2.33333, 0.00000]], [ -0.52360, [ 2, -2.33333, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.52360, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.52360, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.00000, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RHipPitch")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ -0.43633, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ -0.34907, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.80285, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.34907, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 0.34907, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.80285, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ -0.43633, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RKneePitch")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.69813, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ 0.34907, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ 2.11185, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 2.00713, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 2.00713, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 2.11185, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.69813, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RAnklePitch")
        times.append([ 0.10000, 2.50000, 4.50000, 6.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ -0.34907, [ 2, -0.03333, 0.00000], [ 2, 0.80000, 0.00000]], [ -0.34907, [ 2, -0.80000, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.52360, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.52360, [ 2, -0.66667, 0.00000], [ 2, 1.66667, 0.00000]], [ 0.52360, [ 2, -1.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.52360, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ -0.34907, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ -0.34907, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        names.append("RAnkleRoll")
        times.append([ 0.10000, 4.50000, 11.50000, 13.50000, 15.50000, 18.00000])
        keys.append([ [ 0.00000, [ 2, -0.03333, 0.00000], [ 2, 1.46667, 0.00000]], [ 0.00000, [ 2, -1.46667, 0.00000], [ 2, 2.33333, 0.00000]], [ 0.00000, [ 2, -2.33333, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.66667, 0.00000]], [ 0.00000, [ 2, -0.66667, 0.00000], [ 2, 0.83333, 0.00000]], [ 0.00000, [ 2, -0.83333, 0.00000], [ 2, 0.00000, 0.00000]]])
        
        try:
            self.__proxy.angleInterpolationBezier(names, times, keys);
        except BaseException, err:
            print str(err)
            